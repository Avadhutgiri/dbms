package frontend; 
import java.sql.*;
import java.util.Scanner; 


public class frontend 
{
    private static final String  URL = "jdbc:mysql://10.10.13.97/te31xxx_db";
    private static final String  USER = "te31xxx"; 
    private static final String  PASSWORD = "te31xxx";
    public static void main(String[] args)
    {
        try
        {
            Scanner input = new Scanner(System.in);
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection(URL,USER, PASSWORD);
            System.out.println("Database Connected..");

            int ch;
            do 
            {
                System.out.println("Enter Choice \nl.Insert \n2.Update \n3.Delete \n4.Display \n5.Exit");
                ch= input.nextInt(); 
                switch (ch) 
                {
                    case 1: 
                    System.out.println("Enter ID:"); 
                    int insertId = input.nextInt(); 
                    input.nextLine(); 
                    System.out.println("Enter Name:"); 
                    String insertName = input.nextLine(): 
                    System.out.println("Enter Email:"); 
                    String insertEmail = input.nextLine(); 
                    insertRecord(connection, insertId, insertName, insertEmail); 
                    break; 
                    case 2: 
                    System.out.println("Enter ID to Update:"); 
                    int updateId = input.nextInt(); 
                    input.nextLine(); 
                    System.out.printin("Enter New Name:"); 
                    String updateName = input.nextLine(); 
                    System.out.println("Enter New Email:"); 
                    String updateEmail = input.nextLine(); 
                    updateRecord(connection, updateId, updateName, updateEmail); 
                    break; 
                    case 3: 
                    System.out.println("Enter ID to Delete:"); 
                    int deleteId = input.nextInt(); 
                    deleteRecord(connection, deleteId); 
                    break; 
                    case 4: 
                    displayRecords(connection); 
                    break; 
                    case 5: System.out.println("Exiting..."); 
                    break; 
                    default: 
                    System.out.println("Invalid choice. Please enter a number between 1 and 5.")
                } while (ch != 5);
                connection.close();
            } catch(Exception e) { 
                e.printStackTrace();
            }
        }
public static void insertRecord(Connection connection, int id, String name, String email) throws SQLException
{
String sql = "INSERT INTO users (id, name, email) VALUES (?, ?, ?)"; 
try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
        preparedStatement.setInt(1, id); 
        preparedStatement.setString(2, name); 
        preparedStatement.setString(3, enail); 
        int rowsAffected = preparedStatement.executeUpdate(); 
        if (rowsAffected > 0) 
        System.out.println("Record inserted successfully."); 
        else 
        System.out.println("Error inserting record.");
    }
}
public static void updateRecord(Connection connection, int id, String name, String email) throws S0LException
{
String sql = "UPDATE users SET name = ?, email = ? WHERE id = ?"; 
try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) 
{
    preparedStatement.setString(1, name); 
    preparedStatement.setString(2, email); 
    preparedStatement.setInt(3, id); 
    int rowsAffected = preparedStatement.executeUpdate(): 
    if (rowsAffected > 0) 
    System.out.println("Record updated successfully.");  
    else 
    System.out.println("No record found with the specified ID.");
} 
} 

public static void deleteRecord(Connection connection, int id) throws SOLException 
{ 
    String sql = "DELETE FROM users WHERE id = ?"; 
    try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) 
    { 
        preparedStatement.setInt(1, id); 
        int rowsAffected = preparedStatement.executeUpdate(); 
        if (rowsAffected > 0) 
        System.out.println("Record deleted successfully."); 
        else 
        System.out.println("No record found with the specified ID.");
    }
}
public static void displayRecords(Connection connection) throws SQLException 
{
String sql = "SELECT * FROM users"; 
try (Statement statement = connection.createStatenent(); 
        ResultSet resultset = statement.executeQuery(sql))
    {
        System.out.println("ID\tName\t\t\tEmail"):
        while (resultSet.next()) 
        { 
            int id = resultset.getInt("id"); 
            String name = resultSet.getString("name"); 
            String email = resultset.getString("email"); 
            System.out.printf("&d\t%s\t\t%s%n", id, name, email);
        }
    }
} 
}
}
